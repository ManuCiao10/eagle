---------BOT--------------------
 RESTRUCTION FILE 
 debug folder
 Add loader for all the info( profiles, proxies, key)
 rich_presence
 create an executable file in golang
 check how to compile go module and create the CONSOLE APP
 ADD APII
 Function to generate all the file necessary to set up csv etc..
 Auto-updates
 monitor
 client
 modules
 Scrape PID + put them encrypted
 Sniffer tipo proxyman, fiddler
 RANDOM Name + Surname
 Add MQT MONITOR MODE
 TAble Print message logs with color and char messages

# Backend / API

---------ERROR_HANDLING----------------------

---------OTHERS-----------------------------
 Function to close the bot from remote

---------GUIDE-------------------------------

---------WEB_SITES-------------------------------
 https://superkicks.in/shop/
 https://www.shoezgallery.com/en/
 https://thesupernuts.com/
 https://www.the-broken-arm.com/en/57-sneakers
 https://www.citadium.com/fr/fr/footwear
 https://www.blue-tomato.com/en-GB/products/categories/Shoes-0000005G/
 https://www.brownsfashion.com/it/shopping/man-shoes-trainers

---------Structure-------------------------------
1. The architecture does not depend on the existence of some library of feature laden software.
2. Testable. The business rules can be tested without the UI, Database, Web Server, or any other external element.
https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html

func setConsoleTitle(title string) (int, error) {
	handle, err := syscall.LoadLibrary("Kernel32.dll")
	if err != nil {
		return 0, err
	}
	defer syscall.FreeLibrary(handle)
	proc, err := syscall.GetProcAddress(handle, "SetConsoleTitleW")
	if err != nil {
		return 0, err
	}
	r, _, err := syscall.Syscall(proc, 1, uintptr(unsafe.Pointer(syscall.StringToUTF16Ptr(title))), 0, 0)
	return int(r), err
}

func updateTitle() {
	_, _ = setConsoleTitle(fmt.Sprintf("HellasAIO ｜ Carts: %d ｜ Checkouts: %d ｜ Failures: %d", carts, checkouts, failures))
}
